// <auto-generated />
using MbDevelopment.Greenmaster.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MbDevelopment.Greenmaster.DataAccess.Migrations
{
    [DbContext(typeof(BotanicalContext))]
    partial class BotanicalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MbDevelopment.Greenmaster.Core.Botanical.CommonName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<string>("UsedByLanguages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("CommonNames");
                });

            modelBuilder.Entity("MbDevelopment.Greenmaster.Core.Botanical.Genus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genera");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "non-flowering seed plants",
                            LatinName = "Ginkgo"
                        },
                        new
                        {
                            Id = 2,
                            LatinName = "Linum"
                        },
                        new
                        {
                            Id = 3,
                            LatinName = "Strelitzia"
                        });
                });

            modelBuilder.Entity("MbDevelopment.Greenmaster.Core.Botanical.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenusId")
                        .HasColumnType("int");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenusId");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("MbDevelopment.Greenmaster.Core.Botanical.CommonName", b =>
                {
                    b.HasOne("MbDevelopment.Greenmaster.Core.Botanical.Species", "Species")
                        .WithMany("CommonNames")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("MbDevelopment.Greenmaster.Core.Botanical.Species", b =>
                {
                    b.HasOne("MbDevelopment.Greenmaster.Core.Botanical.Genus", "Genus")
                        .WithMany("Species")
                        .HasForeignKey("GenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genus");
                });

            modelBuilder.Entity("MbDevelopment.Greenmaster.Core.Botanical.Genus", b =>
                {
                    b.Navigation("Species");
                });

            modelBuilder.Entity("MbDevelopment.Greenmaster.Core.Botanical.Species", b =>
                {
                    b.Navigation("CommonNames");
                });
#pragma warning restore 612, 618
        }
    }
}
